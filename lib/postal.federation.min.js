/*!
 *  * postal.federation - A base plugin for federating instances of postal.js across various boundaries.
 *  * Author: Jim Cowart (http://ifandelse.com)
 *  * Version: v0.4.0
 *  * Url: http://github.com/postaljs/postal.federation
 *  * License(s): (MIT OR GPL-2.0)
 */
(function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n(require("_"),require("postal")):"function"==typeof define&&define.amd?define(["_","postal"],n):"object"==typeof exports?exports.postalFedx=n(require("_"),require("postal")):t.postalFedx=n(t._,t.postal)})(this,function(t,n){return function(t){function n(i){if(e[i])return e[i].exports;var o=e[i]={exports:{},id:i,loaded:!1};return t[i].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}var e={};return n.m=t,n.c=e,n.p="",n(0)}([function(t,n,e){function i(t,n,e){var i=Object.prototype.hasOwnProperty.call(fedx.filters[e],t),o=i&&d.any(fedx.filters[e][t],function(t){return p.configuration.resolver.compare(t,n)}),s="blacklist"===I.filterMode;return I.enabled&&(s&&(!i||i&&!o)||!s&&i&&o)}function o(t,n,e){this.target=t,this.options=n||{},this.pings={},this.instanceId=e,this.handshakeComplete=!1}function s(t){fedx.signalReady.apply(this,t)}function a(t){fedx.send.apply(this,t)}function c(t){fedx.onFederatedMsg.call(this,t)}var r=function(t){return t&&t.__esModule?t["default"]:t},d=r(e(1)),p=r(e(2));p.createUUID||(p.createUUID=function(){for(var t=[],n="0123456789abcdef",e=0;36>e;e++)t[e]=n.substr(Math.floor(16*Math.random()),1);return t[14]="4",t[19]=n.substr(3&t[19]|8,1),t[8]=t[13]=t[18]=t[23]="-",t.join("")}),p.instanceId||(p.instanceId=function(){var t=void 0,n=void 0;return function(e){return e&&(n=t,t=e,p.publish({channel:p.configuration.SYSTEM_CHANNEL,topic:"instanceId.changed",data:{oldId:n,newId:t}})),t}}());var l=function(){},f=!1,u=[],h=[],g=[],k={enabled:!0,filterMode:"whitelist",filterDirection:"both"},I=k,y={ping:function(){return{type:"federation.ping",instanceId:p.instanceId(),timeStamp:new Date,ticket:p.createUUID()}},pong:function(t){return{type:"federation.pong",instanceId:p.instanceId(),timeStamp:new Date,pingData:{instanceId:t.instanceId,timeStamp:t.timeStamp,ticket:t.ticket}}},message:function(t){return{type:"federation.message",instanceId:p.instanceId(),timeStamp:new Date,envelope:t}},disconnect:function(){return{type:"federation.disconnect",instanceId:p.instanceId(),timeStamp:new Date}},bundle:function(t){return{type:"federation.bundle",instanceId:p.instanceId(),timeStamp:new Date,packingSlips:t}}},m={"federation.ping":function(t){t.source.setInstanceId(t.packingSlip.instanceId),t.source.handshakeComplete?t.source.sendPong(t.packingSlip):t.source.sendBundle([fedx.getPackingSlip("pong",t.packingSlip),fedx.getPackingSlip("ping")])},"federation.pong":function(t){t.source.handshakeComplete=!0,t.source.setInstanceId(t.packingSlip.instanceId),t.source.pings[t.packingSlip.pingData.ticket]&&(t.source.pings[t.packingSlip.pingData.ticket].callback({ticket:t.packingSlip.pingData.ticket,instanceId:t.packingSlip.instanceId,source:t.source}),t.source.pings[t.packingSlip.pingData.ticket]=void 0),d.contains(fedx.clients,t.packingSlip.instanceId)||fedx.clients.push(t.packingSlip.instanceId),p.publish({channel:"postal.federation",topic:"client.federated",data:{remoteId:t.source.instanceId,localId:p.instanceId(),transport:t.transport}})},"federation.disconnect":function(t){fedx.clients=d.without(fedx.clients,t.source.instanceId),fedx.disconnect({transport:t.source.transportName,instanceId:t.source.instanceId,doNotNotify:!0})},"federation.message":function(t){var n=t.packingSlip.envelope;i(n.channel,n.topic,"in")&&(n.lastSender=t.packingSlip.instanceId,p.publish(n))},"federation.bundle":function(t){d.each(t.packingSlip.packingSlips,function(n){fedx.onFederatedMsg(d.extend({},t,{packingSlip:n}))})}};o.prototype.sendPing=function(t){var n=fedx.getPackingSlip("ping");this.pings[n.ticket]={ticket:n.ticket,callback:t||l},this.send(n)},o.prototype.sendPong=function(t){this.send(fedx.getPackingSlip("pong",t))},o.prototype.sendBundle=function(t){this.send(fedx.getPackingSlip("bundle",t))},o.prototype.sendMessage=function(t){if(this.handshakeComplete){t.originId=t.originId||p.instanceId();var n=d.clone(t);!this.instanceId||this.instanceId===n.lastSender||n.knownIds&&n.knownIds.length&&(!n.knownIds||d.include(n.knownIds,this.instanceId))||(n.knownIds=(n.knownIds||[]).concat(d.without(fedx.clients,this.instanceId)),this.send(fedx.getPackingSlip("message",n)))}},o.prototype.disconnect=function(){this.send(fedx.getPackingSlip("disconnect"))},o.prototype.onMessage=function(t){this.shouldProcess()&&fedx.onFederatedMsg({transport:this.transportName,packingSlip:t,source:this})},o.prototype.shouldProcess=function(){return!0},o.prototype.send=function(){throw new Error("An object deriving from FederationClient must provide an implementation for 'send'.")},o.prototype.setInstanceId=function(t){this.instanceId=t},o.extend=function(t,n){function e(){o.apply(this,arguments)}return e.prototype=Object.create(o.prototype),d.extend(e.prototype,t),d.extend(e,n),e},t.exports=fedx=p.fedx={FederationClient:o,packingSlips:y,handlers:m,clients:[],transports:{},filters:{"in":{},out:{}},addFilter:function(t){t=d.isArray(t)?t:[t],d.each(t,function(t){t.direction=t.direction||I.filterDirection,d.each("both"===t.direction?["in","out"]:[t.direction],function(n){this.filters[n][t.channel]?d.include(this.filters[n][t.channel],t.topic)||this.filters[n][t.channel].push(t.topic):this.filters[n][t.channel]=[t.topic]},this)},this)},removeFilter:function(t){t=d.isArray(t)?t:[t],d.each(t,function(t){t.direction=t.direction||I.filterDirection,d.each("both"===t.direction?["in","out"]:[t.direction],function(n){this.filters[n][t.channel]&&d.include(this.filters[n][t.channel],t.topic)&&(this.filters[n][t.channel]=d.without(this.filters[n][t.channel],t.topic))},this)},this)},canSendRemote:function(t,n){return i(t,n,"out")},configure:function(t){if(t&&t.filterMode&&"blacklist"!==t.filterMode&&"whitelist"!==t.filterMode)throw new Error("postal.fedx filterMode must be 'blacklist' or 'whitelist'.");return t&&(I=d.defaults(t,k)),I},getPackingSlip:function(t){return Object.prototype.hasOwnProperty.call(y,t)?y[t].apply(this,Array.prototype.slice.call(arguments,1)):void 0},onFederatedMsg:function(t){if(!f)return void u.push(t);if(!Object.prototype.hasOwnProperty.call(m,t.packingSlip.type))throw new Error("postal.federation does not have a message handler for '"+t.packingSlip.type+"'.");m[t.packingSlip.type](t)},sendMessage:function(t){return f?void d.each(this.transports,function(n){n.sendMessage(t)}):void h.push(arguments)},disconnect:function(t){t=t||{};var n=this.transports;t.transport&&(n={},n[t.transport]=this.transports[t.transport]),d.each(n,function(n){n.disconnect({target:t.target,instanceId:t.instanceId,doNotNotify:!!t.doNotNotify})},this)},_getTransports:function(){return d.reduce(this.transports,function(t,n,e){return t[e]=!0,t},{})},signalReady:function(t,n,e){if(!f)return void g.push(arguments);var i=this._getTransports();switch(arguments.length){case 1:"function"==typeof t?e=t:"string"==typeof t&&(i={},i[t]=this.transports[t],e=l);break;case 2:"string"==typeof t?(i={},i[t]=this.transports[t]):i=t,e=n||l;break;case 3:i={},i[t]=[n]}d.each(i,function(t,n){t="boolean"==typeof t?[]:t,this.transports[n].signalReady(t,e)},this)}},p.addWireTap(function(t,n){fedx.canSendRemote(n.channel,n.topic)&&fedx.sendMessage(n)}),p.subscribe({channel:p.configuration.SYSTEM_CHANNEL,topic:"instanceId.changed",callback:function(){for(f=!0;g.length;)s(g.shift());for(;h.length;)a(h.shift());for(;u.length;)c(u.shift())}}),void 0!==p.instanceId()&&(f=!0)},function(n,e){n.exports=t},function(t,e){t.exports=n}])});
//# sourceMappingURL=postal.federation.min.js.map